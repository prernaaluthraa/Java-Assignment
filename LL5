class GFG { 
  
    // Structure for a linked list node / 
    static class Node { 
        int data; 
        Node next; 
    }; 
  
    // Function to insert whole linked list in 
    // to another linked list at position k 
    static Node insert(Node head1, Node head2, 
                       int k) 
    { 
        // traverse the first linked list until k-th 
        // point is reached 
        int count = 1; 
        Node curr = head1; 
        while (count < k) { 
            curr = curr.next; 
            count++; 
        } 
  
        // backup next node of the k-th point 
        Node temp = curr.next; 
  
        // join second linked list at the kth point 
        curr.next = head2; 
  
        // traverse the second linked list till end 
        while (head2.next != null) 
            head2 = head2.next; 
  
        // join the second part of the linked list 
        // to the end 
        head2.next = temp; 
        return head1; 
    } 
  
    // Function to print linked list recursively 
    static void printList(Node head) 
    { 
        if (head == null) 
            return; 
  
        // If head is not null, print current node 
        // and recur for remaining list 
        System.out.print(head.data + " "); 
        printList(head.next); 
    } 
  
    // Given a reference (pointer to pointer) to the head 
    // of a list and an int, insert a new node on the front 
    // of the list. 
    static Node push(Node head_ref, int new_data) 
    { 
        Node new_node = new Node(); 
        new_node.data = new_data; 
        new_node.next = (head_ref); 
        (head_ref) = new_node; 
        return head_ref; 
    } 
  
    // Driven code 
    public static void main(String args[]) 
    { 
        // The constructed linked lists are : 
        // a: 1.2.3.4.5; 
        // b: 7.8.9.10.11 
        Node a = null; 
        Node b = null; 
        int k = 2; 
  
        // first linked list 
        a = push(a, 5); 
        a = push(a, 4); 
        a = push(a, 3); 
        a = push(a, 2); 
        a = push(a, 1); 
  
        // second linked list 
        b = push(b, 11); 
        b = push(b, 10); 
        b = push(b, 9); 
        b = push(b, 8); 
        b = push(b, 7); 
  
        printList(a); 
        System.out.println(); 
  
        printList(b); 
  
        a = insert(a, b, k); 
  
        System.out.print("\nResulting linked list\t"); 
        printList(a); 
    } 
} 
